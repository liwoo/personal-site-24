---
import type { ImageMetadata } from 'astro';
import { Image } from 'astro:assets';

import type { Link } from '~/types';

type Props = {
  logos?: Array<Link>;
};

const { logos = [] } = Astro.props;
const logosLength = logos.length;
const randomizedLogos = logos.sort(() => Math.random() - 0.5);
const topLogos = randomizedLogos.slice(0, logosLength / 2);
const bottomLogos = randomizedLogos.slice(logosLength / 2, logosLength);

const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/images/logos/png/*.{jpeg,jpg,png,gif}');
---

{
  logos?.length ? (
    <>
      <div class="hidden lg:block">
        <div class="flex overflow-hidden space-x-16 group">
          <ul class="flex space-x-16 animate-loop-scroll">
            {topLogos.map(async ({ icon, text }) => {
              const src = (await images[`/src/assets/images/logos/png/${icon}-light.png`]()).default.src;
              return (
                <li>
                  <img data-img-type src={src} class="max-w-none w-28 h-28 lg:w-48 lg:h-48" alt={text ?? ''} />
                </li>
              );
            })}
          </ul>
          <ul class="flex space-x-16 animate-loop-scroll" aria-hidden="true">
            {topLogos.map(async ({ icon, text }) => {
              const src = (await images[`/src/assets/images/logos/png/${icon}-light.png`]()).default.src;
              return (
                <li>
                  <img data-img-type src={src} class="max-w-none w-28 h-28 lg:w-48 lg:h-48" alt={text ?? ''} />
                </li>
              );
            })}
          </ul>
        </div>
        <div class="flex overflow-hidden space-x-16 group">
          <ul class="flex space-x-16 animate-loop-scroll-reverse">
            {bottomLogos.map(async ({ icon, text }) => {
              const src = (await images[`/src/assets/images/logos/png/${icon}-light.png`]()).default.src;
              return (
                <li>
                  <img data-img-type src={src} class="max-w-none w-28 h-28 lg:w-48 lg:h-48" alt={text ?? ''} />
                </li>
              );
            })}
          </ul>
          <ul class="flex space-x-16 animate-loop-scroll-reverse" aria-hidden="true">
            {bottomLogos.map(async ({ icon, text }) => {
              const src = (await images[`/src/assets/images/logos/png/${icon}-light.png`]()).default.src;
              return (
                <li>
                  <img data-img-type src={src} class="max-w-none w-28 h-28 lg:w-48 lg:h-48" alt={text ?? ''} />
                </li>
              );
            })}
          </ul>
        </div>
      </div>

      <div class="flex lg:hidden overflow-hidden space-x-16 group">
        <ul class="flex space-x-16 animate-loop-scroll-fast">
          {logos.map(async ({ icon, text }) => {
            const src = (await images[`/src/assets/images/logos/png/${icon}-light.png`]()).default.src;
            return (
              <li>
                <img data-img-type src={src} class="max-w-none w-28 h-28 lg:w-48 lg:h-48" alt={text ?? ''} />
              </li>
            );
          })}
        </ul>
        <ul class="flex space-x-16 animate-loop-scroll-fast" aria-hidden="true">
          {logos.map(async ({ icon, text }) => {
            const src = (await images[`/src/assets/images/logos/png/${icon}-light.png`]()).default.src;
            return (
              <li>
                <img data-img-type src={src} class="max-w-none w-28 h-28 lg:w-48 lg:h-48" alt={text ?? ''} />
              </li>
            );
          })}
        </ul>
      </div>
    </>
  ) : null
}
