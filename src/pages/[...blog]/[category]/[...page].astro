---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro';
import { blogCategoryRobots, getStaticPathsBlogCategory } from '~/utils/blog';

import Layout from '~/layouts/PageLayout.astro';
import Pagination from '~/components/blog/Pagination.astro';
import Hero2 from '~/components/widgets/Hero2.astro';
import ToBlogLink from '~/components/blog/ToBlogLink.astro';
import {ListItem} from '~/components/blog/ListItem';

export const prerender = true;

export const getStaticPaths = (async ({ paginate }) => {
  return await getStaticPathsBlogCategory({ paginate });
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths> & { category: string };

const { page, category } = Astro.props as Props;

const currentPage = page.currentPage ?? 1;

const metadata = {
  title: `Category '${category}' ${currentPage > 1 ? ` â€” Page ${currentPage}` : ''}`,
  robots: {
    index: blogCategoryRobots?.index,
    follow: blogCategoryRobots?.follow,
  },
};
---

<Layout metadata={metadata}>
  <Hero2>
    <Fragment slot="title">
      <div class="z-30 relative">
        <ToBlogLink />
      </div>
      Category: <span class="underlined">{category}</span>
    </Fragment>
  </Hero2>
  <section class="container-lg my-32 items-center flex flex-col md:flex-row-reverse gap-y-8 md:gap-y-0 justify-between relative z-10">
    {page.data.map((post) => <ListItem post={post} />)}
    <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
  </section>
</Layout>

